{"version":3,"sources":["src/app/login/login.page.html","src/app/login/login-routing.module.ts","src/app/login/login.module.ts","src/app/login/login.page.scss","src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,knGAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,wCAAA,CAAA,WAAA;AAFb,KADqB,CAAvB;AAWA,QAAa,sBAAsB,GAAnC,MAAa,sBAAb,CAAmC,EAAnC;AAAa,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJlC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,eAAe,GAA5B,MAAa,eAAb,CAA4B,EAA5B;AAAa,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAV3B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,kDAAA,CAAA,wBAAA,CAJO,EAKP,2CAAA,CAAA,qBAAA,CALO,CADD;AAQR,MAAA,YAAY,EAAE,CAAC,wCAAA,CAAA,WAAA,CAAD;AARN,KAAT,CAU2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACpBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iLAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,SAAS,GAAtB,MAAa,SAAb,CAAsB;AAYlB,MAAA,WAAA,CACY,aADZ,EAEY,MAFZ,EAGY,mBAHZ,EAIY,iBAJZ,EAIgD;AAHpC,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,iBAAA,GAAA,iBAAA;AAXZ,aAAA,SAAA,GAAiB;AACb,UAAA,KAAK,EAAE,EADM;AAEb,UAAA,QAAQ,EAAE;AAFG,SAAjB;AAIA,aAAA,iBAAA,GAAyB,6DAAA,CAAA,OAAA,CAAzB;AACA,aAAA,gBAAA,GAA4B,KAA5B;AAOQ;;AAGR,MAAA,QAAQ,GAAA;AACJ,aAAK,iBAAL;AACA,aAAK,UAAL;AACH;;AAED,MAAA,WAAW,GAAA;AACP,YAAI,KAAK,aAAL,CAAmB,gBAAnB,EAAJ,EAA2C;AACvC,eAAK,iBAAL;AACH,SAFD,MAEO;AACH,eAAK,cAAL;AACH;AACJ;;AAEK,MAAA,iBAAiB,GAAA;;AACnB,cAAI;AACA,iBAAK,iBAAL,CAAuB,cAAvB;AACA,kBAAM,KAAK,mBAAL,CAAyB,iBAAzB,EAAN;AACA,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,eAApC;AACA,iBAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,iBAAK,iBAAL,CAAuB,aAAvB;AACH,WAND,CAME,OAAO,KAAP,EAAc;AACZ,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,sBAApC;AACA,iBAAK,iBAAL,CAAuB,aAAvB;AACH;AACJ,S;AAAA;;AAEK,MAAA,cAAc,GAAA;;AAChB,cAAI;AACA,kBAAM,KAAK,mBAAL,CAAyB,cAAzB,EAAN;AACH,WAFD,CAEE,OAAO,KAAP,EAAc;AACZ,YAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,KAAK,CAAC,OAA1C;AACH;AACJ,S;AAAA;;AAEG,MAAA,SAAS,GAAA;AACT,aAAK,SAAL,CAAe,KAAf;AACA,aAAK,SAAL,GAAiB;AACb,UAAA,KAAK,EAAE,EADM;AAEb,UAAA,QAAQ,EAAE;AAFG,SAAjB;AAIH;;AAEK,MAAA,sBAAsB,GAAA;;AACxB,cAAI;AACA,iBAAK,gBAAL,GAAwB,IAAxB;AACA,kBAAM,MAAM,GAAG,MAAM,KAAK,mBAAL,CAAyB,sBAAzB,CAAgD,KAAK,KAAL,CAAW,KAA3D,EAAkE,KAAK,QAAL,CAAc,KAAhF,CAArB;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,MAAxB;AACA,iBAAK,gBAAL,GAAwB,KAAxB;AACA,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,WAApC;AACA,iBAAK,SAAL;AACA,iBAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACH,WARD,CAQE,OAAO,KAAP,EAAc;AACZ,YAAA,OAAO,CAAC,GAAR,CAAY,SAAZ,EAAuB,KAAvB;AACA,iBAAK,gBAAL,GAAwB,KAAxB;AACA,iBAAK,iBAAL,CAAuB,YAAvB,CAAoC,KAAK,CAAC,OAA1C;AACH;AACJ,S;AAAA;;AAED,MAAA,cAAc,GAAA;AACV,aAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACH;;AAED,MAAA,iBAAiB,GAAA;AACb,aAAK,KAAL,GAAa,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,CAC7B,2CAAA,CAAA,YAAA,CAAA,CAAW,QADkB,EAE7B,2CAAA,CAAA,YAAA,CAAA,CAAW,KAFkB,CAApB,CAAb;AAIA,aAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,CAChC,2CAAA,CAAA,YAAA,CAAA,CAAW,QADqB,EAEhC,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAFgC,CAApB,CAAhB;AAIH;;AAED,MAAA,UAAU,GAAA;AACN,aAAK,SAAL,GAAiB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC3B,UAAA,KAAK,EAAE,KAAK,KADe;AAE3B,UAAA,QAAQ,EAAE,KAAK;AAFY,SAAd,CAAjB;AAIA,aAAK,SAAL,CAAe,YAAf,CAA4B,SAA5B,CAAsC,IAAI,IAAI,KAAK,kBAAL,CAAwB,IAAxB,CAA9C;AACH;;AAED,MAAA,kBAAkB,CAAC,IAAD,EAAK;AACtB,aAAK,SAAL,GAAiB,KAAK,aAAL,CAAmB,wBAAnB,CAA4C,KAAK,SAAjD,EAA4D,KAAK,iBAAjE,EAAoF,KAAK,SAAzF,CAAjB;AACA;;AAxGiB,KAAtB;;;YAa+B,sDAAA,CAAA,eAAA;;YACP,4CAAA,CAAA,QAAA;;YACa,6DAAA,CAAA,qBAAA;;YACF,2DAAA,CAAA,mBAAA;;;AAhBtB,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACP,MAAA,QAAQ,EAAE,WADH;AAEP,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,6EAAA,CAAA,EAAA,OAFO;;;;AAAA,KAAV,CAKqB,E,uEAaS,sDAAA,CAAA,eAAA,C,EACP,4CAAA,CAAA,QAAA,C,EACa,6DAAA,CAAA,qBAAA,C,EACF,2DAAA,CAAA,mBAAA,C,EAhBb,CAAA,EAAT,SAAS,CAAT","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Login</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-grid fixed>\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n            <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-card>\\n                    <ion-card-header>\\n                        <ion-card-title class=\\\"ion-text-center\\\">\\n                            <ion-icon name=\\\"lock-closed\\\" color=\\\"tertiary\\\"></ion-icon>\\n                            Login\\n                        </ion-card-title>\\n                    </ion-card-header>\\n                    <ion-card-content>\\n                        <form [formGroup]=\\\"loginForm\\\" autocomplete=\\\"off\\\">\\n                            <ion-item>\\n                                <ion-label position=\\\"floating\\\">\\n                                    Email\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\" formControlName=\\\"email\\\">\\n                                </ion-input>\\n                            </ion-item>\\n                            <div class=\\\"error-message\\\">\\n                                {{formError.email}}\\n                            </div>\\n                            <ion-item>\\n                                <ion-label position=\\\"floating\\\">\\n                                    Password\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\" formControlName=\\\"password\\\">\\n                                </ion-input>\\n                            </ion-item>\\n                            <div class=\\\"error-message\\\">\\n                                {{formError.password}}\\n                            </div>\\n                            <ion-row>\\n                                <ion-col>\\n                                    <ion-button expand=\\\"block\\\" color=\\\"tertiary\\\" class=\\\"ion-margin-top\\\" [disabled]=\\\"loginForm.invalid\\\" (click)=\\\"loginWithEmailPassword()\\\">\\n                                        Email Login \\n                                        <ion-spinner name=\\\"dots\\\" *ngIf=\\\"showLoginSpinner\\\">\\n                                        </ion-spinner>\\n                                    </ion-button>\\n                                </ion-col>\\n                                <ion-col>\\n                                    <ion-button expand=\\\"block\\\" color=\\\"danger\\\" class=\\\"ion-margin-top\\\" (click)=\\\"googleLoginWeb()\\\">\\n                                        <ion-icon name=\\\"logo-google\\\"></ion-icon>\\n                                        &nbsp;Google Login\\n                                    </ion-button>\\n                                </ion-col>\\n                            </ion-row>\\n                            <ion-button expand=\\\"block\\\" color=\\\"light\\\" class=\\\"ion-margin-top\\\" (click)=\\\"goToSignupPage()\\\">\\n                                Signup\\n                            </ion-button>\\n                        </form>\\n                    </ion-card-content>\\n                </ion-card>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { FirebaseAuthService } from './../providers/firebase-auth.service';\nimport { HelperService } from './../providers/helper.service';\nimport { LOGIN } from './../constants/formValidationMessage';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { WidgetUtilService } from '../providers/widget-util.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n    loginForm: FormGroup;\n    email: FormControl;\n    password: FormControl;\n    formError: any = {\n        email: '',\n        password: ''\n    };\n    validationMessage: any = LOGIN\n    showLoginSpinner: boolean = false;\n\n    constructor(\n        private helperService: HelperService, \n        private router: Router, \n        private firebaseAuthService: FirebaseAuthService, \n        private widgetUtilService: WidgetUtilService\n        ) {}\n\n\n    ngOnInit() {\n        this.createFormControl();\n        this.createForm();\n    }\n\n    googleLogin() {\n        if (this.helperService.isNativePlatform()) {\n            this.nativeGoogleLogin();\n        } else {\n            this.googleLoginWeb();\n        }\n    }\n\n    async nativeGoogleLogin() {\n        try {\n            this.widgetUtilService.presentLoading();\n            await this.firebaseAuthService.nativeGoogleLogin();\n            this.widgetUtilService.presentToast('Login Success');\n            this.router.navigate(['/home']);\n            this.widgetUtilService.dismissLoader();\n        } catch (error) {\n            this.widgetUtilService.presentToast('Something Went Wrong');\n            this.widgetUtilService.dismissLoader();\n        }\n    }\n\n    async googleLoginWeb() {\n        try {\n            await this.firebaseAuthService.googleLoginWeb();\n        } catch (error) {\n            console.log(error);\n            this.widgetUtilService.presentToast(error.message);\n        }\n    }\n\n        resetForm() {\n        this.loginForm.reset();\n        this.formError = {\n            email: '',\n            password: ''\n        };\n    }\n\n    async loginWithEmailPassword() {\n        try {\n            this.showLoginSpinner = true;\n            const result = await this.firebaseAuthService.loginWithEmailPassword(this.email.value, this.password.value);\n            console.log('Result: ', result);\n            this.showLoginSpinner = false;\n            this.widgetUtilService.presentToast('Logged In');\n            this.resetForm();\n            this.router.navigate(['/home']);\n        } catch (error) {\n            console.log('Error: ', error);\n            this.showLoginSpinner = false;\n            this.widgetUtilService.presentToast(error.message);\n        }\n    }\n\n    goToSignupPage() {\n        this.router.navigate(['/signup'])\n    }\n\n    createFormControl() {\n        this.email = new FormControl('', [\n            Validators.required,\n            Validators.email\n        ]);\n        this.password = new FormControl('', [\n            Validators.required,\n            Validators.minLength(5)\n        ]);\n    }\n\n    createForm() {\n        this.loginForm = new FormGroup({\n            email: this.email,\n            password: this.password\n        });\n        this.loginForm.valueChanges.subscribe(data => this.onFormValueChanged(data));\n    }\n\n    onFormValueChanged(data) {\n    \tthis.formError = this.helperService.prepareValidationMessage(this.loginForm, this.validationMessage, this.formError);\n    }\n\n}"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}