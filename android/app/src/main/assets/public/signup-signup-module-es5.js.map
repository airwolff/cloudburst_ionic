{"version":3,"sources":["src/app/signup/signup.page.html","src/app/signup/signup-routing.module.ts","src/app/signup/signup.module.ts","src/app/signup/signup.page.scss","src/app/signup/signup.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Signup</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-grid fixed>\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n            <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"6\\\">\\n                <ion-card>\\n                    <ion-card-header>\\n                        <ion-card-title class=\\\"ion-text-center\\\">\\n                            <ion-icon name=\\\"lock-closed\\\" color=\\\"tertiary\\\"></ion-icon>\\n                            Signup\\n                        </ion-card-title>\\n                    </ion-card-header>\\n                    <ion-card-content>\\n                        <form [formGroup]=\\\"signupForm\\\" autocomplete=\\\"off\\\">\\n                            <ion-item>\\n                                <ion-label position=\\\"floating\\\">\\n                                    Email\\n                                </ion-label>\\n                                <ion-input type=\\\"text\\\" formControlName=\\\"email\\\">\\n                                </ion-input>\\n                            </ion-item>\\n                            <div class=\\\"error-message\\\">\\n                                {{formError.email}}\\n                            </div>\\n                            <ion-item>\\n                                <ion-label position=\\\"floating\\\">\\n                                    Password\\n                                </ion-label>\\n                                <ion-input type=\\\"password\\\" formControlName=\\\"password\\\">\\n                                </ion-input>\\n                            </ion-item>\\n                            <div class=\\\"error-message\\\">\\n                                {{formError.password}}\\n                            </div>\\n                            <ion-button color=\\\"tertiary\\\" expand=\\\"block\\\" class=\\\"ion-margin-top login-button\\\" [disabled]=\\\"signupForm.invalid\\\" (click)=\\\"signup()\\\">\\n                                Signup\\n                                <ion-spinner name=\\\"dots\\\" *ngIf=\\\"showSignupSpinner\\\"></ion-spinner>\\n                            </ion-button>\\n                            <ion-button expand=\\\"full\\\" color=\\\"light\\\" class=\\\"button ion-margin-top signup-button\\\" (click)=\\\"goToLoginPage()\\\">\\n                                Go to Login\\n                            </ion-button>\\n                        </form>\\n                    </ion-card-content>\\n                </ion-card>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import { FirebaseAuthService } from './../providers/firebase-auth.service';\nimport { Router } from '@angular/router';\nimport { HelperService } from './../providers/helper.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SIGNUP } from '../constants/formValidationMessage';\nimport { WidgetUtilService } from '../providers/widget-util.service';\n\n@Component({\n    selector: 'app-signup',\n    templateUrl: './signup.page.html',\n    styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n\n    signupForm: FormGroup;\n    email: FormControl;\n    password: FormControl;\n    formError: any = {\n        email: '',\n        password: ''\n    };\n    validationMessage: any = SIGNUP\n    showSignupSpinner: boolean = false;\n\n    constructor(\n        private helperService: HelperService, \n        private router: Router, \n        private firebaseAuthService: FirebaseAuthService, \n        private widgetUtilService: WidgetUtilService\n        ) {}\n\n    ngOnInit() {\n        this.createFormControl();\n        this.createForm();\n    }\n\n    resetForm() {\n        this.signupForm.reset();\n        this.formError = {\n            email: '',\n            password: ''\n        };\n    }\n\n    async signup() {\n        try {\n            this.showSignupSpinner = true;\n            const result = await this.firebaseAuthService.registerWithEmailPassword(this.email.value, this.password.value);\n            console.log('Result: ', result);\n            this.showSignupSpinner = false;\n            this.widgetUtilService.presentToast('Signup Success! Verification Email Sent...');\n            this.resetForm();\n            this.router.navigate(['/login']);\n        } catch (error) {\n            console.log('Error: ', error);\n            this.showSignupSpinner = false;\n            this.widgetUtilService.presentToast(error.message);\n        }\n    }\n\n    goToLoginPage() {\n        this.router.navigate(['/login'])\n    }\n\n    createFormControl() {\n        this.email = new FormControl('', [\n            Validators.required,\n            Validators.email\n        ]);\n        this.password = new FormControl('', [\n            Validators.required,\n            Validators.minLength(5)\n        ]);\n    }\n\n    createForm() {\n        this.signupForm = new FormGroup({\n            email: this.email,\n            password: this.password\n        });\n        this.signupForm.valueChanges.subscribe(data => this.onFormValueChanged(data));\n    }\n\n    onFormValueChanged(data) {\n        this.formError = this.helperService.prepareValidationMessage(this.signupForm, this.validationMessage, this.formError);\n    }\n\n}"],"sourceRoot":"webpack:///","file":"signup-signup-module-es5.js"}